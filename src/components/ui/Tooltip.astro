---
export interface Props {
  content: string;
  position?: 'top' | 'bottom' | 'left' | 'right';
  class?: string;
}

const { 
  content, 
  position = 'top',
  class: className = '',
  ...rest 
} = Astro.props;

const positionClasses = {
  top: 'bottom-full left-1/2 transform -translate-x-1/2 mb-2',
  bottom: 'top-full left-1/2 transform -translate-x-1/2 mt-2', 
  left: 'right-full top-1/2 transform -translate-y-1/2 mr-2',
  right: 'left-full top-1/2 transform -translate-y-1/2 ml-2'
};

const arrowClasses = {
  top: 'top-full left-1/2 transform -translate-x-1/2 border-l-4 border-r-4 border-t-4 border-transparent border-t-steel-800',
  bottom: 'bottom-full left-1/2 transform -translate-x-1/2 border-l-4 border-r-4 border-b-4 border-transparent border-b-steel-800',
  left: 'left-full top-1/2 transform -translate-y-1/2 border-t-4 border-b-4 border-l-4 border-transparent border-l-steel-800',
  right: 'right-full top-1/2 transform -translate-y-1/2 border-t-4 border-b-4 border-r-4 border-transparent border-r-steel-800'
};

const tooltipId = `tooltip-${Math.random().toString(36).substr(2, 9)}`;
---

<div class={`relative inline-block ${className}`} {...rest}>
  <!-- Trigger element -->
  <div 
    class="cursor-help"
    role="button"
    tabindex="0"
    aria-describedby={tooltipId}
    onmouseenter="this.nextElementSibling.classList.remove('invisible', 'opacity-0')"
    onmouseleave="this.nextElementSibling.classList.add('invisible', 'opacity-0')"
    onfocus="this.nextElementSibling.classList.remove('invisible', 'opacity-0')"
    onblur="this.nextElementSibling.classList.add('invisible', 'opacity-0')"
  >
    <slot />
  </div>
  
  <!-- Tooltip -->
  <div 
    id={tooltipId}
    class={`absolute z-50 px-3 py-2 text-sm font-medium text-steel-50 bg-steel-800 rounded-md shadow-lg transition-all duration-200 invisible opacity-0 pointer-events-none max-w-xs ${positionClasses[position]}`}
    role="tooltip"
  >
    {content}
    
    <!-- Arrow -->
    <div class={`absolute w-0 h-0 ${arrowClasses[position]}`} aria-hidden="true"></div>
    
    <!-- Industrial decoration -->
    <div class="absolute top-1 left-1 rivet w-1 h-1 opacity-40" aria-hidden="true"></div>
  </div>
</div>

<script>
  // Enhanced keyboard support
  document.addEventListener('DOMContentLoaded', function() {
    const tooltipTriggers = document.querySelectorAll('[aria-describedby^="tooltip-"]');
    
    tooltipTriggers.forEach(trigger => {
      trigger.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
          const tooltip = document.getElementById(this.getAttribute('aria-describedby'));
          if (tooltip) {
            tooltip.classList.add('invisible', 'opacity-0');
            this.blur();
          }
        }
      });
    });
  });
</script>